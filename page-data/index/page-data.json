{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"discord\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Discord\"), mdx(\"p\", null, \"Come hang out with us on Discord. We chat about the scripts, tools, snippets, etc that we're building.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://discord.gg/ma8Dq4\"\n  }), \"Join our Discord\")), mdx(\"h2\", {\n    \"id\": \"newsletter\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Newsletter\"), mdx(\"p\", null, \"Sign-up below to receive automation recipes weekly in your mailbox!\"), mdx(Newsletter, {\n    mdxType: \"Newsletter\"\n  }), mdx(\"h2\", {\n    \"id\": \"topics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"blog\",\n    \"title\": \"Blog\"\n  }), \"Blog\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"code\",\n    \"title\": \"Code\"\n  }), \"Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"internet\",\n    \"title\": \"Internet\"\n  }), \"Internet\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"keyboard\",\n    \"title\": \"Keyboard\"\n  }), \"Keyboard\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"mouse-and-trackpad\",\n    \"title\": \"Mouse and Trackpad\"\n  }), \"Mouse and Trackpad\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"music\",\n    \"title\": \"Music\"\n  }), \"Music\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Operating-System\",\n    \"title\": \"Operating System\"\n  }), \"[[Operating System]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"terminal\",\n    \"title\": \"Terminal\"\n  }), \"Terminal\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"typing\",\n    \"title\": \"Typing\"\n  }), \"Typing\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"video\",\n    \"title\": \"Video\"\n  }), \"Video\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"profiles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Profiles\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"how-to-contribute\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"How to Contribute?\"), mdx(\"p\", null, \"This site runs on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/foambubble/foam\"\n  }), \"Foam\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/\"\n  }), \"Gatsby\"), \". It is build by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/features/actions\"\n  }), \"Github Actions\"), \" and hosted on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pages.github.com/\"\n  }), \"Github Pages\")), mdx(\"h3\", {\n    \"id\": \"adding-a-recipe\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Adding a Recipe\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open the topic on Github, e.g., \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/johnlindquist/automatoes.com/blob/master/blog.md\"\n  }), \"Video\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Please (loosely) follow the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"recipe-template\",\n    \"title\": \"Recipe Template\"\n  }), \"Recipe Template\"), \"]\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Open a PR\")), mdx(\"h3\", {\n    \"id\": \"improving-the-site\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Improving the Site\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Clone repo\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"cd \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"_layouts\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm run develop\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"All the Gatsby files live in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_layout\"), \". The root of the project is reserved for Markdown files.\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"blog\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Blog\"), mdx(\"h2\", {\n    \"id\": \"create-a-markdown-blogpost-in-a-single-command\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a Markdown Blogpost in a Single Command\"), mdx(\"p\", null, \"Usage: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog \\\"a post with a youtube and egghead embed\\\" -y \\\"awftawftoyun\\\" -e \\\"Bawftyun\\\"\")), mdx(\"p\", null, \"Result: A markdown file properly titled with frontmatter and codesandbox/youtube/egghead embeds\"), mdx(\"p\", null, \"I'll make a video sometime to walk through this entire process, but here's the gist of it:\"), mdx(\"p\", null, \"I use this zsh function called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blog\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# y:youtube c:codesandbox e:egghead\\nzparseopts -D -E -A opts y: c: e:\\n\\ncd ~/projects/johnlindquist.com\\n\\nlocal title=\\\"$(change -c title \\\"$1\\\")\\\"\\nlocal slug=\\\"$(change \\\"$1\\\")\\\"\\n\\n# Use the array_of_lines technique in case node.js console more than 1 line of text\\n# array_of_lines=(\\\"${(@f)$(my_command)}\\\")\\narray_of_lines=(\\\"${(@f)$(node ~/projects/blog/index.js \\\"$title\\\" \\\\\\n  $(slug)\\n)}\\\")\\n\\nfilePath=$array_of_lines[-1]\\n\\nport=$(detect 8000)\\ncode . -g \\\"$filePath\\\"\\nopen \\\"http://localhost:8000/${slug}\\\"\\n\\n# The port is available when it's the same as the requested port\\nif [ $port = 8000 ]\\n  then\\n  yarn develop\\nfi\\n\")), mdx(\"p\", null, \"Which triggers this node script:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"#!/usr/bin/env node\\n\\nconst slugify = require(\\\"slugify\\\")\\nconst fs = require(\\\"fs-extra\\\")\\nconst { format } = require(\\\"date-fns\\\")\\nconst formatTitle = require(\\\"ap-style-title-case\\\")\\nconst cac = require(\\\"cac\\\")\\nconst cli = cac()\\nconst path = require(\\\"path\\\")\\n\\ncli\\n  .command(\\\"[...title]\\\")\\n  .option(\\\"--codesandbox <codesandbox>\\\", \\\"Codesandbox slug\\\", { type: String, default: \\\"\\\" })\\n  .option(\\\"--youtube <youtube>\\\", \\\"Youtube slug\\\", { type: String, default: \\\"\\\" })\\n  .option(\\\"--egghead <egghead>\\\", \\\"egghead slug\\\", { type: String, default: \\\"\\\" })\\n  .action(([text], options) => {\\n\\n    const { codesandbox, youtube, egghead } = options\\n\\n    const slug = slugify(text, {\\n      replacement: \\\"-\\\", // replace spaces with replacement\\n      remove: /[*+~.()'\\\"!:@,]/g, // regex to remove characters\\n      lower: true // result in lower case\\n    })\\n\\n    const title = formatTitle(text)\\n\\n    // console.log({ codesandbox, youtube, egghead })\\n\\n    const codesandboxBlock = codesandbox && `<Codesandbox slug=\\\"${codesandbox}\\\"/>`\\n    const youtubeBlock = youtube && `<YoutubeEmbed slug=\\\"${youtube}\\\"/>`\\n    const eggheadBlock = egghead && `<EggheadEmbed slug=\\\"${egghead}\\\"/>`\\n\\n    const content = `---\\nslug: ${slug}\\ntitle: ${title}\\ndate: ${format(new Date(), \\\"YYYY-MM-DD HH:MM\\\")}\\npublished: false\\ncategory: ['']\\n---\\n\\n${codesandboxBlock || \\\"\\\"}\\n${youtubeBlock || \\\"\\\"}\\n${eggheadBlock || \\\"\\\"}\\n`\\n\\n    // console.log(content)\\n    const localPath = `content/posts/${slug}.md`\\n    const filePath = path.resolve(process.cwd(), localPath)\\n\\n      ; (async () => {\\n        try {\\n          await fs.writeFile(filePath, content, { flag: \\\"wx\\\" })\\n          console.log(\\\"Succesfully written \\\" + filePath)\\n          console.log(localPath)\\n        } catch (error) {\\n          console.log(error)\\n          console.log(\\\"file \\\" + filePath + \\\" already exists\\\")\\n        }\\n      })()\\n  })\\n\\ncli.parse()\\n\\n\")), mdx(\"p\", null, \"Tags\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Node.js\",\n    \"title\": \"Node.js\"\n  }), \"[[Node.js]]\"), \"\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"8a4eac22-ecdb-5963-8425-4d8b8ea6f421","fields":{"slug":"/blog","title":"Blog"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Code\"), mdx(\"h2\", {\n    \"id\": \"create-a-vs-code-extension\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Create a VS Code Extension\"), mdx(\"p\", null, \"The VS Code team provides a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"huge\"), \" repo of examples covering almost every use case you can think of. This is the best place to start when you have an extension idea:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/microsoft/vscode-extension-samples\"\n  }), \"VS Code Extension Samples\")), mdx(\"p\", null, \"Tags: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"vs-code\",\n    \"title\": \"VS Code\"\n  }), \"VS Code\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"9aaae907-823b-569c-91e9-7d2931323898","fields":{"slug":"/code","title":"Code"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"internet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Internet\"), mdx(\"h2\", {\n    \"id\": \"instantly-jump-bookmarks-from-anywhere\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Instantly Jump Bookmarks From Anywhere\"), mdx(\"p\", null, \"Open your Alfred preferences and check your bookmarks. Now your bookmarks will show up in Alfred's main search.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://res.cloudinary.com/johnlindquist/image/upload/v1595912144/automatoes/Screen_Shot_2020-07-27_at_10.55.07_PM_g2qlig.png\",\n    \"alt\": \"A screenshot of Alfred's bookmark feature\"\n  }))), mdx(\"p\", null, \"Tags: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"alfred\",\n    \"title\": \"Alfred\"\n  }), \"Alfred\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"543cbde2-211e-5eb7-9309-4ea87452d7b0","fields":{"slug":"/internet","title":"Internet"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"keyboard\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Keyboard\"), mdx(\"p\", null, \"Keyboard recipes go here\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"328e692e-fcf8-5524-8ec8-b809e3952ec5","fields":{"slug":"/keyboard","title":"Keyboard"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mouse-and-trackpad\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Mouse and Trackpad\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d978b8d9-ee31-5f67-89a0-b5c797dee104","fields":{"slug":"/mouse-and-trackpad","title":"Mouse and Trackpad"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"music\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Music\"), mdx(\"p\", null, \"Music recipes go here\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"27b6676d-1bd3-51c8-9ccc-5217397bb263","fields":{"slug":"/music","title":"Music"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"terminal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Terminal\"), mdx(\"h2\", {\n    \"id\": \"store-all-my-zsh-function-in-a-directory\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Store All My zsh Function in a Directory\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.zshrc\"), \" Directory\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".zshrc\"), \", add the following block to the top:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"for file in ~/.zfunc/**; do\\n  autoload $file;\\ndone\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add a files containing zsh functions into your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.zshrc\"), \" directory\")), mdx(\"p\", null, \"For example, create a file named: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\")), mdx(\"p\", null, \"Add the contents:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"ls | grep -i \\\"$1\\\"\\n\")), mdx(\"p\", null, \"Now you can search your current directory with:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"lg foo\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b7f05086-d0fa-597e-b2b4-9ab169dffe1b","fields":{"slug":"/terminal","title":"Terminal"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"typing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Typing\"), mdx(\"h2\", {\n    \"id\": \"use-any-key-as-a-modifier\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Use Any Key as a Modifier\"), mdx(\"p\", null, \"To use your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"'\"), \" key as a modifier:\"), mdx(\"p\", null, \"In your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"karabiner.edn\"), \" file:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"At the top-level, add a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"simlayers\"), \" section and name a \\\"mode\\\" based on your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"quote\"), \" key:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-closure\"\n  }), \":simlayers {;\\n             :quote-mode {:key :quote}\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"At the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":main\"), \" level, add a block based on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"quote-mode\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-closure\"\n  }), \"        {:des \\\"quote mode\\\"\\n         :rules [:quote-mode\\n                ; I use quote mode to trigger zsh functions\\n                 [:f [:zsh \\\"thoughts\\\"]]\\n                 [:c [:zsh \\\"config\\\"]]\\n                 [:z  [:zsh \\\"zfunc\\\"]]\\n                 ;\\n                 ]}\\n\")), mdx(\"p\", null, \"Tags\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"karabiner-elements\",\n    \"title\": \"Karabiner Elements\"\n  }), \"Karabiner Elements\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"gokurakujoudo\",\n    \"title\": \"GokuRakuJoudo\"\n  }), \"GokuRakuJoudo\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"bb905811-fb2b-5464-84cc-ccf278322f52","fields":{"slug":"/typing","title":"Typing"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"video\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Video\"), mdx(\"h2\", {\n    \"id\": \"join-together-a-video-and-audio-file\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Join together a video and audio file\"), mdx(\"p\", null, \"Solution: Create a zsh function that captures [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"ffmpeg\",\n    \"title\": \"Ffmpeg\"\n  }), \"ffmpeg\"), \"] arguments\"), mdx(\"p\", null, \"Filename: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"replace-audio\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"extension=${1##*.}\\nfilename=${1%*.$extension}\\n\\nnewfilename=\\\"$filename\\\"-processed.\\\"$extension\\\"\\n\\nffmpeg -i $1 -i $2 -c:v copy -map 0:v:0 -map 1:a:0 $newfilename\\n\")), mdx(\"p\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"replace-audio myVideo.mp4 myAudio.wav\\n\")), mdx(\"p\", null, \"Tags: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"ffmpeg\",\n    \"title\": \"Ffmpeg\"\n  }), \"ffmpeg\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zsh\",\n    \"title\": \"Zsh\"\n  }), \"zsh\"), \"]\")), mdx(\"p\", null, \"Contributor: [\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"john-lindquist\",\n    \"title\": \"John Lindquist\"\n  }), \"John Lindquist\"), \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"1049459f-1b06-5ec5-af3c-da1feb3d9849","fields":{"slug":"/video","title":"Video"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"john-lindquist\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"John Lindquist\"), mdx(\"h2\", {\n    \"id\": \"top-recommendations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Top Recommendations\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"karabiner-elements\",\n    \"title\": \"Karabiner Elements\"\n  }), \"Karabiner Elements\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"alfred\",\n    \"title\": \"Alfred\"\n  }), \"Alfred\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"vs-code\",\n    \"title\": \"VS Code\"\n  }), \"VS Code\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"keyboardio\",\n    \"title\": \"keyboardio\"\n  }), \"Keyboardio\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"siri-shortcuts\",\n    \"title\": \"Siri Shortcuts\"\n  }), \"Siri Shortcuts\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"scriptable\",\n    \"title\": \"Scriptable\"\n  }), \"Scriptable\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"4dab3b1d-037a-5df9-b894-0f4c0283ec98","fields":{"slug":"/john-lindquist","title":"John Lindquist"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"recipe-template\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Recipe Template\"), mdx(\"h2\", {\n    \"id\": \"i-want-to\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"I Want to...\")), mdx(\"p\", null, \"Solution: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"One sentence summary\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"filenames, screenshots, whatever\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"code if necessary\\n\")), mdx(\"p\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"example goes here\\n\")), mdx(\"p\", null, \"Tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[wiki-link]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[to]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[other]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[tech]]\"))), mdx(\"p\", null, \"Contributor: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Create a page for youself\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"96086610-2fe7-55b6-9482-4444f7dcbbb1","fields":{"slug":"/recipe-template","title":"Recipe Template"}}}],"inboundReferences":[]},"fields":{"slug":"/readme","title":"readme"}}},"pageContext":{"id":"93e461cb-e069-559d-828c-4612ee82c11f"}},"staticQueryHashes":["2098632890","426988268"]}